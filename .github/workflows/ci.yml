name: CI

on:
  push:
    branches:
      - 'main'
      - 'release-*'
      - 'wip-*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 6 * * 1' # Mondays at 6am

env:
  node-version: '14.x'
  CI: true
  GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ci-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile --non-interactive
      - name: Lint
        run: yarn lint
      - name: Test
        run: yarn test:ember

  test-no-lock:
    name: Floating Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ci-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --no-lockfile --non-interactive
      - name: Test
        run: yarn test:ember

  test-compatibility:
    name: "Scenario Tests: ${{ matrix.scenario }} | optional: ${{ matrix.allow-failure }}"
    runs-on: ubuntu-latest
    needs: [test, test-no-lock]
    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      fail-fast: false
      matrix:
        command:
          - ember test
        scenario:
          - ember-lts-3.16
          - ember-lts-3.20
          - ember-release
          - ember-beta
          - ember-default-with-jquery
          - ember-classic
        allow-failure: [false]
        include:
          - scenario: ember-canary
            allow-failure: true
          - scenario: embroider-safe
            allow-failure: true
          - scenario: embroider-optimized
            allow-failure: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ci-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile --non-interactive
      - name: Test
        timeout-minutes: 10
        run: yarn ember try:one ${{ matrix.scenario }} --- ${{ matrix.command }}
